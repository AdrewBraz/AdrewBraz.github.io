(function(){var t,e,n,i,o,s=function(t,e){return function(){return t.apply(e,arguments)}},r=[].indexOf||function(t){for(var e=0,n=this.length;e<n;e++)if(e in this&&this[e]===t)return e;return-1};e=function(){function t(){}return t.prototype.extend=function(t,e){var n,i;for(n in e)i=e[n],null==t[n]&&(t[n]=i);return t},t.prototype.isMobile=function(t){return/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(t)},t.prototype.createEvent=function(t,e,n,i){var o;return null==e&&(e=!1),null==n&&(n=!1),null==i&&(i=null),null!=document.createEvent?(o=document.createEvent("CustomEvent"),o.initCustomEvent(t,e,n,i)):null!=document.createEventObject?(o=document.createEventObject(),o.eventType=t):o.eventName=t,o},t.prototype.emitEvent=function(t,e){return null!=t.dispatchEvent?t.dispatchEvent(e):e in(null!=t)?t[e]():"on"+e in(null!=t)?t["on"+e]():void 0},t.prototype.addEvent=function(t,e,n){return null!=t.addEventListener?t.addEventListener(e,n,!1):null!=t.attachEvent?t.attachEvent("on"+e,n):t[e]=n},t.prototype.removeEvent=function(t,e,n){return null!=t.removeEventListener?t.removeEventListener(e,n,!1):null!=t.detachEvent?t.detachEvent("on"+e,n):delete t[e]},t.prototype.innerHeight=function(){return"innerHeight"in window?window.innerHeight:document.documentElement.clientHeight},t}(),n=this.WeakMap||this.MozWeakMap||(n=function(){function t(){this.keys=[],this.values=[]}return t.prototype.get=function(t){var e,n,i,o,s;for(s=this.keys,e=i=0,o=s.length;i<o;e=++i)if(n=s[e],n===t)return this.values[e]},t.prototype.set=function(t,e){var n,i,o,s,r;for(r=this.keys,n=o=0,s=r.length;o<s;n=++o)if(i=r[n],i===t)return void(this.values[n]=e);return this.keys.push(t),this.values.push(e)},t}()),t=this.MutationObserver||this.WebkitMutationObserver||this.MozMutationObserver||(t=function(){function t(){"undefined"!=typeof console&&null!==console&&console.warn("MutationObserver is not supported by your browser."),"undefined"!=typeof console&&null!==console&&console.warn("WOW.js cannot detect dom mutations, please call .sync() after loading new content.")}return t.notSupported=!0,t.prototype.observe=function(){},t}()),i=this.getComputedStyle||function(t,e){return this.getPropertyValue=function(e){var n;return"float"===e&&(e="styleFloat"),o.test(e)&&e.replace(o,function(t,e){return e.toUpperCase()}),(null!=(n=t.currentStyle)?n[e]:void 0)||null},this},o=/(\-([a-z]){1})/g,this.WOW=function(){function o(t){null==t&&(t={}),this.scrollCallback=s(this.scrollCallback,this),this.scrollHandler=s(this.scrollHandler,this),this.resetAnimation=s(this.resetAnimation,this),this.start=s(this.start,this),this.scrolled=!0,this.config=this.util().extend(t,this.defaults),null!=t.scrollContainer&&(this.config.scrollContainer=document.querySelector(t.scrollContainer)),this.animationNameCache=new n,this.wowEvent=this.util().createEvent(this.config.boxClass)}return o.prototype.defaults={boxClass:"wow",animateClass:"animated",offset:0,mobile:!0,live:!0,callback:null,scrollContainer:null},o.prototype.init=function(){var t;return this.element=window.document.documentElement,"interactive"===(t=document.readyState)||"complete"===t?this.start():this.util().addEvent(document,"DOMContentLoaded",this.start),this.finished=[]},o.prototype.start=function(){var e,n,i,o;if(this.stopped=!1,this.boxes=function(){var t,n,i,o;for(i=this.element.querySelectorAll("."+this.config.boxClass),o=[],t=0,n=i.length;t<n;t++)e=i[t],o.push(e);return o}.call(this),this.all=function(){var t,n,i,o;for(i=this.boxes,o=[],t=0,n=i.length;t<n;t++)e=i[t],o.push(e);return o}.call(this),this.boxes.length)if(this.disabled())this.resetStyle();else for(o=this.boxes,n=0,i=o.length;n<i;n++)e=o[n],this.applyStyle(e,!0);if(this.disabled()||(this.util().addEvent(this.config.scrollContainer||window,"scroll",this.scrollHandler),this.util().addEvent(window,"resize",this.scrollHandler),this.interval=setInterval(this.scrollCallback,50)),this.config.live)return new t(function(t){return function(e){var n,i,o,s,r;for(r=[],n=0,i=e.length;n<i;n++)s=e[n],r.push(function(){var t,e,n,i;for(n=s.addedNodes||[],i=[],t=0,e=n.length;t<e;t++)o=n[t],i.push(this.doSync(o));return i}.call(t));return r}}(this)).observe(document.body,{childList:!0,subtree:!0})},o.prototype.stop=function(){if(this.stopped=!0,this.util().removeEvent(this.config.scrollContainer||window,"scroll",this.scrollHandler),this.util().removeEvent(window,"resize",this.scrollHandler),null!=this.interval)return clearInterval(this.interval)},o.prototype.sync=function(e){if(t.notSupported)return this.doSync(this.element)},o.prototype.doSync=function(t){var e,n,i,o,s;if(null==t&&(t=this.element),1===t.nodeType){for(t=t.parentNode||t,o=t.querySelectorAll("."+this.config.boxClass),s=[],n=0,i=o.length;n<i;n++)e=o[n],r.call(this.all,e)<0?(this.boxes.push(e),this.all.push(e),this.stopped||this.disabled()?this.resetStyle():this.applyStyle(e,!0),s.push(this.scrolled=!0)):s.push(void 0);return s}},o.prototype.show=function(t){return this.applyStyle(t),t.className=t.className+" "+this.config.animateClass,null!=this.config.callback&&this.config.callback(t),this.util().emitEvent(t,this.wowEvent),this.util().addEvent(t,"animationend",this.resetAnimation),this.util().addEvent(t,"oanimationend",this.resetAnimation),this.util().addEvent(t,"webkitAnimationEnd",this.resetAnimation),this.util().addEvent(t,"MSAnimationEnd",this.resetAnimation),t},o.prototype.applyStyle=function(t,e){var n,i,o;return i=t.getAttribute("data-wow-duration"),n=t.getAttribute("data-wow-delay"),o=t.getAttribute("data-wow-iteration"),this.animate(function(s){return function(){return s.customStyle(t,e,i,n,o)}}(this))},o.prototype.animate=function(){return"requestAnimationFrame"in window?function(t){return window.requestAnimationFrame(t)}:function(t){return t()}}(),o.prototype.resetStyle=function(){var t,e,n,i,o;for(i=this.boxes,o=[],e=0,n=i.length;e<n;e++)t=i[e],o.push(t.style.visibility="visible");return o},o.prototype.resetAnimation=function(t){var e;if(t.type.toLowerCase().indexOf("animationend")>=0)return e=t.target||t.srcElement,e.className=e.className.replace(this.config.animateClass,"").trim()},o.prototype.customStyle=function(t,e,n,i,o){return e&&this.cacheAnimationName(t),t.style.visibility=e?"hidden":"visible",n&&this.vendorSet(t.style,{animationDuration:n}),i&&this.vendorSet(t.style,{animationDelay:i}),o&&this.vendorSet(t.style,{animationIterationCount:o}),this.vendorSet(t.style,{animationName:e?"none":this.cachedAnimationName(t)}),t},o.prototype.vendors=["moz","webkit"],o.prototype.vendorSet=function(t,e){var n,i,o,s;i=[];for(n in e)o=e[n],t[""+n]=o,i.push(function(){var e,i,r,l;for(r=this.vendors,l=[],e=0,i=r.length;e<i;e++)s=r[e],l.push(t[""+s+n.charAt(0).toUpperCase()+n.substr(1)]=o);return l}.call(this));return i},o.prototype.vendorCSS=function(t,e){var n,o,s,r,l,a;for(l=i(t),r=l.getPropertyCSSValue(e),s=this.vendors,n=0,o=s.length;n<o;n++)a=s[n],r=r||l.getPropertyCSSValue("-"+a+"-"+e);return r},o.prototype.animationName=function(t){var e;try{e=this.vendorCSS(t,"animation-name").cssText}catch(n){e=i(t).getPropertyValue("animation-name")}return"none"===e?"":e},o.prototype.cacheAnimationName=function(t){return this.animationNameCache.set(t,this.animationName(t))},o.prototype.cachedAnimationName=function(t){return this.animationNameCache.get(t)},o.prototype.scrollHandler=function(){return this.scrolled=!0},o.prototype.scrollCallback=function(){var t;if(this.scrolled&&(this.scrolled=!1,this.boxes=function(){var e,n,i,o;for(i=this.boxes,o=[],e=0,n=i.length;e<n;e++)t=i[e],t&&(this.isVisible(t)?this.show(t):o.push(t));return o}.call(this),!this.boxes.length&&!this.config.live))return this.stop()},o.prototype.offsetTop=function(t){for(var e;void 0===t.offsetTop;)t=t.parentNode;for(e=t.offsetTop;t=t.offsetParent;)e+=t.offsetTop;return e},o.prototype.isVisible=function(t){var e,n,i,o,s;return n=t.getAttribute("data-wow-offset")||this.config.offset,s=this.config.scrollContainer&&this.config.scrollContainer.scrollTop||window.pageYOffset,o=s+Math.min(this.element.clientHeight,this.util().innerHeight())-n,i=this.offsetTop(t),e=i+t.clientHeight,i<=o&&e>=s},o.prototype.util=function(){return null!=this._util?this._util:this._util=new e},o.prototype.disabled=function(){return!this.config.mobile&&this.util().isMobile(navigator.userAgent)},o}()}).call(this),(new WOW).init(),function(t){function e(){r.hasClass(c)?l.toggleClass(h):l.toggleClass(d)}function n(){r.hasClass(c)?(l.addClass(h),r.animate({left:"0px"},m),a.animate({left:v},m),u.animate({left:v},m)):(l.addClass(d),r.animate({right:"0px"},m),a.animate({right:v},m),u.animate({right:v},m))}function i(){r.hasClass(c)?(l.removeClass(h),r.animate({left:"-"+v},m),a.animate({left:"0px"},m),u.animate({left:"0px"},m)):(l.removeClass(d),r.animate({right:"-"+v},m),a.animate({right:"0px"},m),u.animate({right:"0px"},m))}function o(){t(y).addClass(b),t(y).on("click",function(){var e=t(this);e.hasClass(b)?(t(y).addClass(b).removeClass(g),e.removeClass(b).addClass(g)):e.addClass(b).removeClass(g)})}function s(){t(y).addClass(b),C.children("a").on("click",function(e){e.preventDefault(),t(this).toggleClass(g).next(".pushy-submenu ul").slideToggle(200).end().parent(y).siblings(y).children("a").removeClass(g).next(".pushy-submenu ul").slideUp(200)})}var r=t(".pushy"),l=t("body"),a=t("#container"),u=t(".push"),c="pushy-left",h="pushy-open-left",d="pushy-open-right",f=t(".site-overlay"),p=t(".menu-btn, .pushy-link"),m=200,v=r.width()+"px",y=".pushy-submenu",g="pushy-submenu-open",b="pushy-submenu-closed",C=t(y),w=function(){var t=document.createElement("p"),e=!1,n={webkitTransform:"-webkit-transform",OTransform:"-o-transform",msTransform:"-ms-transform",MozTransform:"-moz-transform",transform:"transform"};document.body.insertBefore(t,null);for(var i in n)void 0!==t.style[i]&&(t.style[i]="translate3d(1px,1px,1px)",e=window.getComputedStyle(t).getPropertyValue(n[i]));return document.body.removeChild(t),void 0!==e&&e.length>0&&"none"!==e}();if(w)r.css({visibility:"visible"}),o(),p.on("click",function(){e()}),f.on("click",function(){e()});else{l.addClass("no-csstransforms3d"),r.hasClass(c)?r.css({left:"-"+v}):r.css({right:"-"+v}),r.css({visibility:"visible"}),a.css({"overflow-x":"hidden"});var E=!1;s(),p.on("click",function(){E?(i(),E=!1):(n(),E=!0)}),f.on("click",function(){E?(i(),E=!1):(n(),E=!0)})}}(jQuery);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4uanMiXSwibmFtZXMiOlsiTXV0YXRpb25PYnNlcnZlciIsIlV0aWwiLCJXZWFrTWFwIiwiZ2V0Q29tcHV0ZWRTdHlsZSIsImdldENvbXB1dGVkU3R5bGVSWCIsImJpbmQiLCJmbiIsIm1lIiwiYXBwbHkiLCJhcmd1bWVudHMiLCJpbmRleE9mIiwiaXRlbSIsImkiLCJsIiwidGhpcyIsImxlbmd0aCIsInByb3RvdHlwZSIsImV4dGVuZCIsImN1c3RvbSIsImRlZmF1bHRzIiwia2V5IiwidmFsdWUiLCJpc01vYmlsZSIsImFnZW50IiwidGVzdCIsImNyZWF0ZUV2ZW50IiwiZXZlbnQiLCJidWJibGUiLCJjYW5jZWwiLCJkZXRhaWwiLCJjdXN0b21FdmVudCIsImRvY3VtZW50IiwiaW5pdEN1c3RvbUV2ZW50IiwiY3JlYXRlRXZlbnRPYmplY3QiLCJldmVudFR5cGUiLCJldmVudE5hbWUiLCJlbWl0RXZlbnQiLCJlbGVtIiwiZGlzcGF0Y2hFdmVudCIsImFkZEV2ZW50IiwiYWRkRXZlbnRMaXN0ZW5lciIsImF0dGFjaEV2ZW50IiwicmVtb3ZlRXZlbnQiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwiZGV0YWNoRXZlbnQiLCJpbm5lckhlaWdodCIsIndpbmRvdyIsImRvY3VtZW50RWxlbWVudCIsImNsaWVudEhlaWdodCIsIk1veldlYWtNYXAiLCJrZXlzIiwidmFsdWVzIiwiZ2V0IiwiaiIsImxlbiIsInJlZiIsInNldCIsInB1c2giLCJXZWJraXRNdXRhdGlvbk9ic2VydmVyIiwiTW96TXV0YXRpb25PYnNlcnZlciIsImNvbnNvbGUiLCJ3YXJuIiwibm90U3VwcG9ydGVkIiwib2JzZXJ2ZSIsImVsIiwicHNldWRvIiwiZ2V0UHJvcGVydHlWYWx1ZSIsInByb3AiLCJyZXBsYWNlIiwiXyIsIl9jaGFyIiwidG9VcHBlckNhc2UiLCJjdXJyZW50U3R5bGUiLCJXT1ciLCJvcHRpb25zIiwic2Nyb2xsQ2FsbGJhY2siLCJzY3JvbGxIYW5kbGVyIiwicmVzZXRBbmltYXRpb24iLCJzdGFydCIsInNjcm9sbGVkIiwiY29uZmlnIiwidXRpbCIsInNjcm9sbENvbnRhaW5lciIsInF1ZXJ5U2VsZWN0b3IiLCJhbmltYXRpb25OYW1lQ2FjaGUiLCJ3b3dFdmVudCIsImJveENsYXNzIiwiYW5pbWF0ZUNsYXNzIiwib2Zmc2V0IiwibW9iaWxlIiwibGl2ZSIsImNhbGxiYWNrIiwiaW5pdCIsImVsZW1lbnQiLCJyZWFkeVN0YXRlIiwiZmluaXNoZWQiLCJib3giLCJzdG9wcGVkIiwiYm94ZXMiLCJyZXN1bHRzIiwicXVlcnlTZWxlY3RvckFsbCIsImNhbGwiLCJhbGwiLCJkaXNhYmxlZCIsInJlc2V0U3R5bGUiLCJhcHBseVN0eWxlIiwiaW50ZXJ2YWwiLCJzZXRJbnRlcnZhbCIsIl90aGlzIiwicmVjb3JkcyIsImsiLCJsZW4xIiwibm9kZSIsInJlY29yZCIsImxlbjIiLCJyZWYxIiwicmVzdWx0czEiLCJhZGRlZE5vZGVzIiwiZG9TeW5jIiwiYm9keSIsImNoaWxkTGlzdCIsInN1YnRyZWUiLCJzdG9wIiwiY2xlYXJJbnRlcnZhbCIsInN5bmMiLCJub2RlVHlwZSIsInBhcmVudE5vZGUiLCJzaG93IiwiY2xhc3NOYW1lIiwiaGlkZGVuIiwiZGVsYXkiLCJkdXJhdGlvbiIsIml0ZXJhdGlvbiIsImdldEF0dHJpYnV0ZSIsImFuaW1hdGUiLCJjdXN0b21TdHlsZSIsInJlcXVlc3RBbmltYXRpb25GcmFtZSIsInN0eWxlIiwidmlzaWJpbGl0eSIsInRhcmdldCIsInR5cGUiLCJ0b0xvd2VyQ2FzZSIsInNyY0VsZW1lbnQiLCJ0cmltIiwiY2FjaGVBbmltYXRpb25OYW1lIiwidmVuZG9yU2V0IiwiYW5pbWF0aW9uRHVyYXRpb24iLCJhbmltYXRpb25EZWxheSIsImFuaW1hdGlvbkl0ZXJhdGlvbkNvdW50IiwiYW5pbWF0aW9uTmFtZSIsImNhY2hlZEFuaW1hdGlvbk5hbWUiLCJ2ZW5kb3JzIiwicHJvcGVydGllcyIsIm5hbWUiLCJ2ZW5kb3IiLCJjaGFyQXQiLCJzdWJzdHIiLCJ2ZW5kb3JDU1MiLCJwcm9wZXJ0eSIsInJlc3VsdCIsImdldFByb3BlcnR5Q1NTVmFsdWUiLCJjc3NUZXh0IiwiZXJyb3IiLCJpc1Zpc2libGUiLCJvZmZzZXRUb3AiLCJ0b3AiLCJvZmZzZXRQYXJlbnQiLCJib3R0b20iLCJ2aWV3Qm90dG9tIiwidmlld1RvcCIsInNjcm9sbFRvcCIsInBhZ2VZT2Zmc2V0IiwiTWF0aCIsIm1pbiIsIl91dGlsIiwibmF2aWdhdG9yIiwidXNlckFnZW50IiwiJCIsInRvZ2dsZVB1c2h5IiwicHVzaHkiLCJoYXNDbGFzcyIsInB1c2h5TGVmdCIsInRvZ2dsZUNsYXNzIiwicHVzaHlPcGVuTGVmdCIsInB1c2h5T3BlblJpZ2h0Iiwib3BlblB1c2h5RmFsbGJhY2siLCJhZGRDbGFzcyIsImxlZnQiLCJtZW51U3BlZWQiLCJjb250YWluZXIiLCJtZW51V2lkdGgiLCJyaWdodCIsImNsb3NlUHVzaHlGYWxsYmFjayIsInJlbW92ZUNsYXNzIiwidG9nZ2xlU3VibWVudSIsInN1Ym1lbnVDbGFzcyIsInN1Ym1lbnVDbG9zZWRDbGFzcyIsIm9uIiwic2VsZWN0ZWQiLCJzdWJtZW51T3BlbkNsYXNzIiwidG9nZ2xlU3VibWVudUZhbGxiYWNrIiwic3VibWVudSIsImNoaWxkcmVuIiwicHJldmVudERlZmF1bHQiLCJuZXh0Iiwic2xpZGVUb2dnbGUiLCJlbmQiLCJwYXJlbnQiLCJzaWJsaW5ncyIsInNsaWRlVXAiLCJzaXRlT3ZlcmxheSIsIm1lbnVCdG4iLCJ3aWR0aCIsImNzc1RyYW5zZm9ybXMzZCIsImNyZWF0ZUVsZW1lbnQiLCJzdXBwb3J0ZWQiLCJ0cmFuc2Zvcm1zIiwid2Via2l0VHJhbnNmb3JtIiwiT1RyYW5zZm9ybSIsIm1zVHJhbnNmb3JtIiwiTW96VHJhbnNmb3JtIiwidHJhbnNmb3JtIiwiaW5zZXJ0QmVmb3JlIiwidCIsInVuZGVmaW5lZCIsInJlbW92ZUNoaWxkIiwiY3NzIiwib3ZlcmZsb3cteCIsIm9wZW5lZCIsImpRdWVyeSJdLCJtYXBwaW5ncyI6IkNB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LE9BRkFoTSxVQUFTd0YsS0FBSzBHLFlBQVlqSyxHQUVKZ0ssU0FBZFQsR0FBMkJBLEVBQVV4TSxPQUFTLEdBQW1CLFNBQWR3TSxJQUc1RCxJQUFHRixFQUVGbEMsRUFBTStDLEtBQUt4RixXQUFjLFlBR3pCd0QsSUFHQWlCLEVBQVFkLEdBQUcsUUFBUyxXQUNuQm5CLE1BR0RnQyxFQUFZYixHQUFHLFFBQVMsV0FDdkJuQixVQUVHLENBRUozRCxFQUFLbUUsU0FBUyxzQkFHVlAsRUFBTUMsU0FBU0MsR0FDbEJGLEVBQU0rQyxLQUFLdkMsS0FBTSxJQUFNRyxJQUV2QlgsRUFBTStDLEtBQUtuQyxNQUFPLElBQU1ELElBSXpCWCxFQUFNK0MsS0FBS3hGLFdBQWMsWUFFekJtRCxFQUFVcUMsS0FBS0MsYUFBYyxVQUc3QixJQUFJQyxJQUFTLENBR2I1QixLQUdBVyxFQUFRZCxHQUFHLFFBQVMsV0FDZitCLEdBQ0hwQyxJQUNBb0MsR0FBUyxJQUVUM0MsSUFDQTJDLEdBQVMsS0FLWGxCLEVBQVliLEdBQUcsUUFBUyxXQUNuQitCLEdBQ0hwQyxJQUNBb0MsR0FBUyxJQUVUM0MsSUFDQTJDLEdBQVMsT0FJWEMiLCJmaWxlIjoibWFpbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbigpIHtcclxuICB2YXIgTXV0YXRpb25PYnNlcnZlciwgVXRpbCwgV2Vha01hcCwgZ2V0Q29tcHV0ZWRTdHlsZSwgZ2V0Q29tcHV0ZWRTdHlsZVJYLFxyXG4gICAgYmluZCA9IGZ1bmN0aW9uKGZuLCBtZSl7IHJldHVybiBmdW5jdGlvbigpeyByZXR1cm4gZm4uYXBwbHkobWUsIGFyZ3VtZW50cyk7IH07IH0sXHJcbiAgICBpbmRleE9mID0gW10uaW5kZXhPZiB8fCBmdW5jdGlvbihpdGVtKSB7IGZvciAodmFyIGkgPSAwLCBsID0gdGhpcy5sZW5ndGg7IGkgPCBsOyBpKyspIHsgaWYgKGkgaW4gdGhpcyAmJiB0aGlzW2ldID09PSBpdGVtKSByZXR1cm4gaTsgfSByZXR1cm4gLTE7IH07XHJcblxyXG4gIFV0aWwgPSAoZnVuY3Rpb24oKSB7XHJcbiAgICBmdW5jdGlvbiBVdGlsKCkge31cclxuXHJcbiAgICBVdGlsLnByb3RvdHlwZS5leHRlbmQgPSBmdW5jdGlvbihjdXN0b20sIGRlZmF1bHRzKSB7XHJcbiAgICAgIHZhciBrZXksIHZhbHVlO1xyXG4gICAgICBmb3IgKGtleSBpbiBkZWZhdWx0cykge1xyXG4gICAgICAgIHZhbHVlID0gZGVmYXVsdHNba2V5XTtcclxuICAgICAgICBpZiAoY3VzdG9tW2tleV0gPT0gbnVsbCkge1xyXG4gICAgICAgICAgY3VzdG9tW2tleV0gPSB2YWx1ZTtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgICAgcmV0dXJuIGN1c3RvbTtcclxuICAgIH07XHJcblxyXG4gICAgVXRpbC5wcm90b3R5cGUuaXNNb2JpbGUgPSBmdW5jdGlvbihhZ2VudCkge1xyXG4gICAgICByZXR1cm4gL0FuZHJvaWR8d2ViT1N8aVBob25lfGlQYWR8aVBvZHxCbGFja0JlcnJ5fElFTW9iaWxlfE9wZXJhIE1pbmkvaS50ZXN0KGFnZW50KTtcclxuICAgIH07XHJcblxyXG4gICAgVXRpbC5wcm90b3R5cGUuY3JlYXRlRXZlbnQgPSBmdW5jdGlvbihldmVudCwgYnViYmxlLCBjYW5jZWwsIGRldGFpbCkge1xyXG4gICAgICB2YXIgY3VzdG9tRXZlbnQ7XHJcbiAgICAgIGlmIChidWJibGUgPT0gbnVsbCkge1xyXG4gICAgICAgIGJ1YmJsZSA9IGZhbHNlO1xyXG4gICAgICB9XHJcbiAgICAgIGlmIChjYW5jZWwgPT0gbnVsbCkge1xyXG4gICAgICAgIGNhbmNlbCA9IGZhbHNlO1xyXG4gICAgICB9XHJcbiAgICAgIGlmIChkZXRhaWwgPT0gbnVsbCkge1xyXG4gICAgICAgIGRldGFpbCA9IG51bGw7XHJcbiAgICAgIH1cclxuICAgICAgaWYgKGRvY3VtZW50LmNyZWF0ZUV2ZW50ICE9IG51bGwpIHtcclxuICAgICAgICBjdXN0b21FdmVudCA9IGRvY3VtZW50LmNyZWF0ZUV2ZW50KCdDdXN0b21FdmVudCcpO1xyXG4gICAgICAgIGN1c3RvbUV2ZW50LmluaXRDdXN0b21FdmVudChldmVudCwgYnViYmxlLCBjYW5jZWwsIGRldGFpbCk7XHJcbiAgICAgIH0gZWxzZSBpZiAoZG9jdW1lbnQuY3JlYXRlRXZlbnRPYmplY3QgIT0gbnVsbCkge1xyXG4gICAgICAgIGN1c3RvbUV2ZW50ID0gZG9jdW1lbnQuY3JlYXRlRXZlbnRPYmplY3QoKTtcclxuICAgICAgICBjdXN0b21FdmVudC5ldmVudFR5cGUgPSBldmVudDtcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICBjdXN0b21FdmVudC5ldmVudE5hbWUgPSBldmVudDtcclxuICAgICAgfVxyXG4gICAgICByZXR1cm4gY3VzdG9tRXZlbnQ7XHJcbiAgICB9O1xyXG5cclxuICAgIFV0aWwucHJvdG90eXBlLmVtaXRFdmVudCA9IGZ1bmN0aW9uKGVsZW0sIGV2ZW50KSB7XHJcbiAgICAgIGlmIChlbGVtLmRpc3BhdGNoRXZlbnQgIT0gbnVsbCkge1xyXG4gICAgICAgIHJldHVybiBlbGVtLmRpc3BhdGNoRXZlbnQoZXZlbnQpO1xyXG4gICAgICB9IGVsc2UgaWYgKGV2ZW50IGluIChlbGVtICE9IG51bGwpKSB7XHJcbiAgICAgICAgcmV0dXJuIGVsZW1bZXZlbnRdKCk7XHJcbiAgICAgIH0gZWxzZSBpZiAoKFwib25cIiArIGV2ZW50KSBpbiAoZWxlbSAhPSBudWxsKSkge1xyXG4gICAgICAgIHJldHVybiBlbGVtW1wib25cIiArIGV2ZW50XSgpO1xyXG4gICAgICB9XHJcbiAgICB9O1xyXG5cclxuICAgIFV0aWwucHJvdG90eXBlLmFkZEV2ZW50ID0gZnVuY3Rpb24oZWxlbSwgZXZlbnQsIGZuKSB7XHJcbiAgICAgIGlmIChlbGVtLmFkZEV2ZW50TGlzdGVuZXIgIT0gbnVsbCkge1xyXG4gICAgICAgIHJldHVybiBlbGVtLmFkZEV2ZW50TGlzdGVuZXIoZXZlbnQsIGZuLCBmYWxzZSk7XHJcbiAgICAgIH0gZWxzZSBpZiAoZWxlbS5hdHRhY2hFdmVudCAhPSBudWxsKSB7XHJcbiAgICAgICAgcmV0dXJuIGVsZW0uYXR0YWNoRXZlbnQoXCJvblwiICsgZXZlbnQsIGZuKTtcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICByZXR1cm4gZWxlbVtldmVudF0gPSBmbjtcclxuICAgICAgfVxyXG4gICAgfTtcclxuXHJcbiAgICBVdGlsLnByb3RvdHlwZS5yZW1vdmVFdmVudCA9IGZ1bmN0aW9uKGVsZW0sIGV2ZW50LCBmbikge1xyXG4gICAgICBpZiAoZWxlbS5yZW1vdmVFdmVudExpc3RlbmVyICE9IG51bGwpIHtcclxuICAgICAgICByZXR1cm4gZWxlbS5yZW1vdmVFdmVudExpc3RlbmVyKGV2ZW50LCBmbiwgZmFsc2UpO1xyXG4gICAgICB9IGVsc2UgaWYgKGVsZW0uZGV0YWNoRXZlbnQgIT0gbnVsbCkge1xyXG4gICAgICAgIHJldHVybiBlbGVtLmRldGFjaEV2ZW50KFwib25cIiArIGV2ZW50LCBmbik7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgcmV0dXJuIGRlbGV0ZSBlbGVtW2V2ZW50XTtcclxuICAgICAgfVxyXG4gICAgfTtcclxuXHJcbiAgICBVdGlsLnByb3RvdHlwZS5pbm5lckhlaWdodCA9IGZ1bmN0aW9uKCkge1xyXG4gICAgICBpZiAoJ2lubmVySGVpZ2h0JyBpbiB3aW5kb3cpIHtcclxuICAgICAgICByZXR1cm4gd2luZG93LmlubmVySGVpZ2h0O1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIHJldHVybiBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xpZW50SGVpZ2h0O1xyXG4gICAgICB9XHJcbiAgICB9O1xyXG5cclxuICAgIHJldHVybiBVdGlsO1xyXG5cclxuICB9KSgpO1xyXG5cclxuICBXZWFrTWFwID0gdGhpcy5XZWFrTWFwIHx8IHRoaXMuTW96V2Vha01hcCB8fCAoV2Vha01hcCA9IChmdW5jdGlvbigpIHtcclxuICAgIGZ1bmN0aW9uIFdlYWtNYXAoKSB7XHJcbiAgICAgIHRoaXMua2V5cyA9IFtdO1xyXG4gICAgICB0aGlzLnZhbHVlcyA9IFtdO1xyXG4gICAgfVxyXG5cclxuICAgIFdlYWtNYXAucHJvdG90eXBlLmdldCA9IGZ1bmN0aW9uKGtleSkge1xyXG4gICAgICB2YXIgaSwgaXRlbSwgaiwgbGVuLCByZWY7XHJcbiAgICAgIHJlZiA9IHRoaXMua2V5cztcclxuICAgICAgZm9yIChpID0gaiA9IDAsIGxlbiA9IHJlZi5sZW5ndGg7IGogPCBsZW47IGkgPSArK2opIHtcclxuICAgICAgICBpdGVtID0gcmVmW2ldO1xyXG4gICAgICAgIGlmIChpdGVtID09PSBrZXkpIHtcclxuICAgICAgICAgIHJldHVybiB0aGlzLnZhbHVlc1tpXTtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH07XHJcblxyXG4gICAgV2Vha01hcC5wcm90b3R5cGUuc2V0ID0gZnVuY3Rpb24oa2V5LCB2YWx1ZSkge1xyXG4gICAgICB2YXIgaSwgaXRlbSwgaiwgbGVuLCByZWY7XHJcbiAgICAgIHJlZiA9IHRoaXMua2V5cztcclxuICAgICAgZm9yIChpID0gaiA9IDAsIGxlbiA9IHJlZi5sZW5ndGg7IGogPCBsZW47IGkgPSArK2opIHtcclxuICAgICAgICBpdGVtID0gcmVmW2ldO1xyXG4gICAgICAgIGlmIChpdGVtID09PSBrZXkpIHtcclxuICAgICAgICAgIHRoaXMudmFsdWVzW2ldID0gdmFsdWU7XHJcbiAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICAgIHRoaXMua2V5cy5wdXNoKGtleSk7XHJcbiAgICAgIHJldHVybiB0aGlzLnZhbHVlcy5wdXNoKHZhbHVlKTtcclxuICAgIH07XHJcblxyXG4gICAgcmV0dXJuIFdlYWtNYXA7XHJcblxyXG4gIH0pKCkpO1xyXG5cclxuICBNdXRhdGlvbk9ic2VydmVyID0gdGhpcy5NdXRhdGlvbk9ic2VydmVyIHx8IHRoaXMuV2Via2l0TXV0YXRpb25PYnNlcnZlciB8fCB0aGlzLk1vek11dGF0aW9uT2JzZXJ2ZXIgfHwgKE11dGF0aW9uT2JzZXJ2ZXIgPSAoZnVuY3Rpb24oKSB7XHJcbiAgICBmdW5jdGlvbiBNdXRhdGlvbk9ic2VydmVyKCkge1xyXG4gICAgICBpZiAodHlwZW9mIGNvbnNvbGUgIT09IFwidW5kZWZpbmVkXCIgJiYgY29uc29sZSAhPT0gbnVsbCkge1xyXG4gICAgICAgIGNvbnNvbGUud2FybignTXV0YXRpb25PYnNlcnZlciBpcyBub3Qgc3VwcG9ydGVkIGJ5IHlvdXIgYnJvd3Nlci4nKTtcclxuICAgICAgfVxyXG4gICAgICBpZiAodHlwZW9mIGNvbnNvbGUgIT09IFwidW5kZWZpbmVkXCIgJiYgY29uc29sZSAhPT0gbnVsbCkge1xyXG4gICAgICAgIGNvbnNvbGUud2FybignV09XLmpzIGNhbm5vdCBkZXRlY3QgZG9tIG11dGF0aW9ucywgcGxlYXNlIGNhbGwgLnN5bmMoKSBhZnRlciBsb2FkaW5nIG5ldyBjb250ZW50LicpO1xyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgTXV0YXRpb25PYnNlcnZlci5ub3RTdXBwb3J0ZWQgPSB0cnVlO1xyXG5cclxuICAgIE11dGF0aW9uT2JzZXJ2ZXIucHJvdG90eXBlLm9ic2VydmUgPSBmdW5jdGlvbigpIHt9O1xyXG5cclxuICAgIHJldHVybiBNdXRhdGlvbk9ic2VydmVyO1xyXG5cclxuICB9KSgpKTtcclxuXHJcbiAgZ2V0Q29tcHV0ZWRTdHlsZSA9IHRoaXMuZ2V0Q29tcHV0ZWRTdHlsZSB8fCBmdW5jdGlvbihlbCwgcHNldWRvKSB7XHJcbiAgICB0aGlzLmdldFByb3BlcnR5VmFsdWUgPSBmdW5jdGlvbihwcm9wKSB7XHJcbiAgICAgIHZhciByZWY7XHJcbiAgICAgIGlmIChwcm9wID09PSAnZmxvYXQnKSB7XHJcbiAgICAgICAgcHJvcCA9ICdzdHlsZUZsb2F0JztcclxuICAgICAgfVxyXG4gICAgICBpZiAoZ2V0Q29tcHV0ZWRTdHlsZVJYLnRlc3QocHJvcCkpIHtcclxuICAgICAgICBwcm9wLnJlcGxhY2UoZ2V0Q29tcHV0ZWRTdHlsZVJYLCBmdW5jdGlvbihfLCBfY2hhcikge1xyXG4gICAgICAgICAgcmV0dXJuIF9jaGFyLnRvVXBwZXJDYXNlKCk7XHJcbiAgICAgICAgfSk7XHJcbiAgICAgIH1cclxuICAgICAgcmV0dXJuICgocmVmID0gZWwuY3VycmVudFN0eWxlKSAhPSBudWxsID8gcmVmW3Byb3BdIDogdm9pZCAwKSB8fCBudWxsO1xyXG4gICAgfTtcclxuICAgIHJldHVybiB0aGlzO1xyXG4gIH07XHJcblxyXG4gIGdldENvbXB1dGVkU3R5bGVSWCA9IC8oXFwtKFthLXpdKXsxfSkvZztcclxuXHJcbiAgdGhpcy5XT1cgPSAoZnVuY3Rpb24oKSB7XHJcbiAgICBXT1cucHJvdG90eXBlLmRlZmF1bHRzID0ge1xyXG4gICAgICBib3hDbGFzczogJ3dvdycsXHJcbiAgICAgIGFuaW1hdGVDbGFzczogJ2FuaW1hdGVkJyxcclxuICAgICAgb2Zmc2V0OiAwLFxyXG4gICAgICBtb2JpbGU6IHRydWUsXHJcbiAgICAgIGxpdmU6IHRydWUsXHJcbiAgICAgIGNhbGxiYWNrOiBudWxsLFxyXG4gICAgICBzY3JvbGxDb250YWluZXI6IG51bGxcclxuICAgIH07XHJcblxyXG4gICAgZnVuY3Rpb24gV09XKG9wdGlvbnMpIHtcclxuICAgICAgaWYgKG9wdGlvbnMgPT0gbnVsbCkge1xyXG4gICAgICAgIG9wdGlvbnMgPSB7fTtcclxuICAgICAgfVxyXG4gICAgICB0aGlzLnNjcm9sbENhbGxiYWNrID0gYmluZCh0aGlzLnNjcm9sbENhbGxiYWNrLCB0aGlzKTtcclxuICAgICAgdGhpcy5zY3JvbGxIYW5kbGVyID0gYmluZCh0aGlzLnNjcm9sbEhhbmRsZXIsIHRoaXMpO1xyXG4gICAgICB0aGlzLnJlc2V0QW5pbWF0aW9uID0gYmluZCh0aGlzLnJlc2V0QW5pbWF0aW9uLCB0aGlzKTtcclxuICAgICAgdGhpcy5zdGFydCA9IGJpbmQodGhpcy5zdGFydCwgdGhpcyk7XHJcbiAgICAgIHRoaXMuc2Nyb2xsZWQgPSB0cnVlO1xyXG4gICAgICB0aGlzLmNvbmZpZyA9IHRoaXMudXRpbCgpLmV4dGVuZChvcHRpb25zLCB0aGlzLmRlZmF1bHRzKTtcclxuICAgICAgaWYgKG9wdGlvbnMuc2Nyb2xsQ29udGFpbmVyICE9IG51bGwpIHtcclxuICAgICAgICB0aGlzLmNvbmZpZy5zY3JvbGxDb250YWluZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKG9wdGlvbnMuc2Nyb2xsQ29udGFpbmVyKTtcclxuICAgICAgfVxyXG4gICAgICB0aGlzLmFuaW1hdGlvbk5hbWVDYWNoZSA9IG5ldyBXZWFrTWFwKCk7XHJcbiAgICAgIHRoaXMud293RXZlbnQgPSB0aGlzLnV0aWwoKS5jcmVhdGVFdmVudCh0aGlzLmNvbmZpZy5ib3hDbGFzcyk7XHJcbiAgICB9XHJcblxyXG4gICAgV09XLnByb3RvdHlwZS5pbml0ID0gZnVuY3Rpb24oKSB7XHJcbiAgICAgIHZhciByZWY7XHJcbiAgICAgIHRoaXMuZWxlbWVudCA9IHdpbmRvdy5kb2N1bWVudC5kb2N1bWVudEVsZW1lbnQ7XHJcbiAgICAgIGlmICgocmVmID0gZG9jdW1lbnQucmVhZHlTdGF0ZSkgPT09IFwiaW50ZXJhY3RpdmVcIiB8fCByZWYgPT09IFwiY29tcGxldGVcIikge1xyXG4gICAgICAgIHRoaXMuc3RhcnQoKTtcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICB0aGlzLnV0aWwoKS5hZGRFdmVudChkb2N1bWVudCwgJ0RPTUNvbnRlbnRMb2FkZWQnLCB0aGlzLnN0YXJ0KTtcclxuICAgICAgfVxyXG4gICAgICByZXR1cm4gdGhpcy5maW5pc2hlZCA9IFtdO1xyXG4gICAgfTtcclxuXHJcbiAgICBXT1cucHJvdG90eXBlLnN0YXJ0ID0gZnVuY3Rpb24oKSB7XHJcbiAgICAgIHZhciBib3gsIGosIGxlbiwgcmVmO1xyXG4gICAgICB0aGlzLnN0b3BwZWQgPSBmYWxzZTtcclxuICAgICAgdGhpcy5ib3hlcyA9IChmdW5jdGlvbigpIHtcclxuICAgICAgICB2YXIgaiwgbGVuLCByZWYsIHJlc3VsdHM7XHJcbiAgICAgICAgcmVmID0gdGhpcy5lbGVtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCIuXCIgKyB0aGlzLmNvbmZpZy5ib3hDbGFzcyk7XHJcbiAgICAgICAgcmVzdWx0cyA9IFtdO1xyXG4gICAgICAgIGZvciAoaiA9IDAsIGxlbiA9IHJlZi5sZW5ndGg7IGogPCBsZW47IGorKykge1xyXG4gICAgICAgICAgYm94ID0gcmVmW2pdO1xyXG4gICAgICAgICAgcmVzdWx0cy5wdXNoKGJveCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiByZXN1bHRzO1xyXG4gICAgICB9KS5jYWxsKHRoaXMpO1xyXG4gICAgICB0aGlzLmFsbCA9IChmdW5jdGlvbigpIHtcclxuICAgICAgICB2YXIgaiwgbGVuLCByZWYsIHJlc3VsdHM7XHJcbiAgICAgICAgcmVmID0gdGhpcy5ib3hlcztcclxuICAgICAgICByZXN1bHRzID0gW107XHJcbiAgICAgICAgZm9yIChqID0gMCwgbGVuID0gcmVmLmxlbmd0aDsgaiA8IGxlbjsgaisrKSB7XHJcbiAgICAgICAgICBib3ggPSByZWZbal07XHJcbiAgICAgICAgICByZXN1bHRzLnB1c2goYm94KTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIHJlc3VsdHM7XHJcbiAgICAgIH0pLmNhbGwodGhpcyk7XHJcbiAgICAgIGlmICh0aGlzLmJveGVzLmxlbmd0aCkge1xyXG4gICAgICAgIGlmICh0aGlzLmRpc2FibGVkKCkpIHtcclxuICAgICAgICAgIHRoaXMucmVzZXRTdHlsZSgpO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICByZWYgPSB0aGlzLmJveGVzO1xyXG4gICAgICAgICAgZm9yIChqID0gMCwgbGVuID0gcmVmLmxlbmd0aDsgaiA8IGxlbjsgaisrKSB7XHJcbiAgICAgICAgICAgIGJveCA9IHJlZltqXTtcclxuICAgICAgICAgICAgdGhpcy5hcHBseVN0eWxlKGJveCwgdHJ1ZSk7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICAgIGlmICghdGhpcy5kaXNhYmxlZCgpKSB7XHJcbiAgICAgICAgdGhpcy51dGlsKCkuYWRkRXZlbnQodGhpcy5jb25maWcuc2Nyb2xsQ29udGFpbmVyIHx8IHdpbmRvdywgJ3Njcm9sbCcsIHRoaXMuc2Nyb2xsSGFuZGxlcik7XHJcbiAgICAgICAgdGhpcy51dGlsKCkuYWRkRXZlbnQod2luZG93LCAncmVzaXplJywgdGhpcy5zY3JvbGxIYW5kbGVyKTtcclxuICAgICAgICB0aGlzLmludGVydmFsID0gc2V0SW50ZXJ2YWwodGhpcy5zY3JvbGxDYWxsYmFjaywgNTApO1xyXG4gICAgICB9XHJcbiAgICAgIGlmICh0aGlzLmNvbmZpZy5saXZlKSB7XHJcbiAgICAgICAgcmV0dXJuIG5ldyBNdXRhdGlvbk9ic2VydmVyKChmdW5jdGlvbihfdGhpcykge1xyXG4gICAgICAgICAgcmV0dXJuIGZ1bmN0aW9uKHJlY29yZHMpIHtcclxuICAgICAgICAgICAgdmFyIGssIGxlbjEsIG5vZGUsIHJlY29yZCwgcmVzdWx0cztcclxuICAgICAgICAgICAgcmVzdWx0cyA9IFtdO1xyXG4gICAgICAgICAgICBmb3IgKGsgPSAwLCBsZW4xID0gcmVjb3Jkcy5sZW5ndGg7IGsgPCBsZW4xOyBrKyspIHtcclxuICAgICAgICAgICAgICByZWNvcmQgPSByZWNvcmRzW2tdO1xyXG4gICAgICAgICAgICAgIHJlc3VsdHMucHVzaCgoZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgICAgICAgICB2YXIgbCwgbGVuMiwgcmVmMSwgcmVzdWx0czE7XHJcbiAgICAgICAgICAgICAgICByZWYxID0gcmVjb3JkLmFkZGVkTm9kZXMgfHwgW107XHJcbiAgICAgICAgICAgICAgICByZXN1bHRzMSA9IFtdO1xyXG4gICAgICAgICAgICAgICAgZm9yIChsID0gMCwgbGVuMiA9IHJlZjEubGVuZ3RoOyBsIDwgbGVuMjsgbCsrKSB7XHJcbiAgICAgICAgICAgICAgICAgIG5vZGUgPSByZWYxW2xdO1xyXG4gICAgICAgICAgICAgICAgICByZXN1bHRzMS5wdXNoKHRoaXMuZG9TeW5jKG5vZGUpKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIHJldHVybiByZXN1bHRzMTtcclxuICAgICAgICAgICAgICB9KS5jYWxsKF90aGlzKSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgcmV0dXJuIHJlc3VsdHM7XHJcbiAgICAgICAgICB9O1xyXG4gICAgICAgIH0pKHRoaXMpKS5vYnNlcnZlKGRvY3VtZW50LmJvZHksIHtcclxuICAgICAgICAgIGNoaWxkTGlzdDogdHJ1ZSxcclxuICAgICAgICAgIHN1YnRyZWU6IHRydWVcclxuICAgICAgICB9KTtcclxuICAgICAgfVxyXG4gICAgfTtcclxuXHJcbiAgICBXT1cucHJvdG90eXBlLnN0b3AgPSBmdW5jdGlvbigpIHtcclxuICAgICAgdGhpcy5zdG9wcGVkID0gdHJ1ZTtcclxuICAgICAgdGhpcy51dGlsKCkucmVtb3ZlRXZlbnQodGhpcy5jb25maWcuc2Nyb2xsQ29udGFpbmVyIHx8IHdpbmRvdywgJ3Njcm9sbCcsIHRoaXMuc2Nyb2xsSGFuZGxlcik7XHJcbiAgICAgIHRoaXMudXRpbCgpLnJlbW92ZUV2ZW50KHdpbmRvdywgJ3Jlc2l6ZScsIHRoaXMuc2Nyb2xsSGFuZGxlcik7XHJcbiAgICAgIGlmICh0aGlzLmludGVydmFsICE9IG51bGwpIHtcclxuICAgICAgICByZXR1cm4gY2xlYXJJbnRlcnZhbCh0aGlzLmludGVydmFsKTtcclxuICAgICAgfVxyXG4gICAgfTtcclxuXHJcbiAgICBXT1cucHJvdG90eXBlLnN5bmMgPSBmdW5jdGlvbihlbGVtZW50KSB7XHJcbiAgICAgIGlmIChNdXRhdGlvbk9ic2VydmVyLm5vdFN1cHBvcnRlZCkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLmRvU3luYyh0aGlzLmVsZW1lbnQpO1xyXG4gICAgICB9XHJcbiAgICB9O1xyXG5cclxuICAgIFdPVy5wcm90b3R5cGUuZG9TeW5jID0gZnVuY3Rpb24oZWxlbWVudCkge1xyXG4gICAgICB2YXIgYm94LCBqLCBsZW4sIHJlZiwgcmVzdWx0cztcclxuICAgICAgaWYgKGVsZW1lbnQgPT0gbnVsbCkge1xyXG4gICAgICAgIGVsZW1lbnQgPSB0aGlzLmVsZW1lbnQ7XHJcbiAgICAgIH1cclxuICAgICAgaWYgKGVsZW1lbnQubm9kZVR5cGUgIT09IDEpIHtcclxuICAgICAgICByZXR1cm47XHJcbiAgICAgIH1cclxuICAgICAgZWxlbWVudCA9IGVsZW1lbnQucGFyZW50Tm9kZSB8fCBlbGVtZW50O1xyXG4gICAgICByZWYgPSBlbGVtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCIuXCIgKyB0aGlzLmNvbmZpZy5ib3hDbGFzcyk7XHJcbiAgICAgIHJlc3VsdHMgPSBbXTtcclxuICAgICAgZm9yIChqID0gMCwgbGVuID0gcmVmLmxlbmd0aDsgaiA8IGxlbjsgaisrKSB7XHJcbiAgICAgICAgYm94ID0gcmVmW2pdO1xyXG4gICAgICAgIGlmIChpbmRleE9mLmNhbGwodGhpcy5hbGwsIGJveCkgPCAwKSB7XHJcbiAgICAgICAgICB0aGlzLmJveGVzLnB1c2goYm94KTtcclxuICAgICAgICAgIHRoaXMuYWxsLnB1c2goYm94KTtcclxuICAgICAgICAgIGlmICh0aGlzLnN0b3BwZWQgfHwgdGhpcy5kaXNhYmxlZCgpKSB7XHJcbiAgICAgICAgICAgIHRoaXMucmVzZXRTdHlsZSgpO1xyXG4gICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgdGhpcy5hcHBseVN0eWxlKGJveCwgdHJ1ZSk7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgICByZXN1bHRzLnB1c2godGhpcy5zY3JvbGxlZCA9IHRydWUpO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICByZXN1bHRzLnB1c2godm9pZCAwKTtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgICAgcmV0dXJuIHJlc3VsdHM7XHJcbiAgICB9O1xyXG5cclxuICAgIFdPVy5wcm90b3R5cGUuc2hvdyA9IGZ1bmN0aW9uKGJveCkge1xyXG4gICAgICB0aGlzLmFwcGx5U3R5bGUoYm94KTtcclxuICAgICAgYm94LmNsYXNzTmFtZSA9IGJveC5jbGFzc05hbWUgKyBcIiBcIiArIHRoaXMuY29uZmlnLmFuaW1hdGVDbGFzcztcclxuICAgICAgaWYgKHRoaXMuY29uZmlnLmNhbGxiYWNrICE9IG51bGwpIHtcclxuICAgICAgICB0aGlzLmNvbmZpZy5jYWxsYmFjayhib3gpO1xyXG4gICAgICB9XHJcbiAgICAgIHRoaXMudXRpbCgpLmVtaXRFdmVudChib3gsIHRoaXMud293RXZlbnQpO1xyXG4gICAgICB0aGlzLnV0aWwoKS5hZGRFdmVudChib3gsICdhbmltYXRpb25lbmQnLCB0aGlzLnJlc2V0QW5pbWF0aW9uKTtcclxuICAgICAgdGhpcy51dGlsKCkuYWRkRXZlbnQoYm94LCAnb2FuaW1hdGlvbmVuZCcsIHRoaXMucmVzZXRBbmltYXRpb24pO1xyXG4gICAgICB0aGlzLnV0aWwoKS5hZGRFdmVudChib3gsICd3ZWJraXRBbmltYXRpb25FbmQnLCB0aGlzLnJlc2V0QW5pbWF0aW9uKTtcclxuICAgICAgdGhpcy51dGlsKCkuYWRkRXZlbnQoYm94LCAnTVNBbmltYXRpb25FbmQnLCB0aGlzLnJlc2V0QW5pbWF0aW9uKTtcclxuICAgICAgcmV0dXJuIGJveDtcclxuICAgIH07XHJcblxyXG4gICAgV09XLnByb3RvdHlwZS5hcHBseVN0eWxlID0gZnVuY3Rpb24oYm94LCBoaWRkZW4pIHtcclxuICAgICAgdmFyIGRlbGF5LCBkdXJhdGlvbiwgaXRlcmF0aW9uO1xyXG4gICAgICBkdXJhdGlvbiA9IGJveC5nZXRBdHRyaWJ1dGUoJ2RhdGEtd293LWR1cmF0aW9uJyk7XHJcbiAgICAgIGRlbGF5ID0gYm94LmdldEF0dHJpYnV0ZSgnZGF0YS13b3ctZGVsYXknKTtcclxuICAgICAgaXRlcmF0aW9uID0gYm94LmdldEF0dHJpYnV0ZSgnZGF0YS13b3ctaXRlcmF0aW9uJyk7XHJcbiAgICAgIHJldHVybiB0aGlzLmFuaW1hdGUoKGZ1bmN0aW9uKF90aGlzKSB7XHJcbiAgICAgICAgcmV0dXJuIGZ1bmN0aW9uKCkge1xyXG4gICAgICAgICAgcmV0dXJuIF90aGlzLmN1c3RvbVN0eWxlKGJveCwgaGlkZGVuLCBkdXJhdGlvbiwgZGVsYXksIGl0ZXJhdGlvbik7XHJcbiAgICAgICAgfTtcclxuICAgICAgfSkodGhpcykpO1xyXG4gICAgfTtcclxuXHJcbiAgICBXT1cucHJvdG90eXBlLmFuaW1hdGUgPSAoZnVuY3Rpb24oKSB7XHJcbiAgICAgIGlmICgncmVxdWVzdEFuaW1hdGlvbkZyYW1lJyBpbiB3aW5kb3cpIHtcclxuICAgICAgICByZXR1cm4gZnVuY3Rpb24oY2FsbGJhY2spIHtcclxuICAgICAgICAgIHJldHVybiB3aW5kb3cucmVxdWVzdEFuaW1hdGlvbkZyYW1lKGNhbGxiYWNrKTtcclxuICAgICAgICB9O1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIHJldHVybiBmdW5jdGlvbihjYWxsYmFjaykge1xyXG4gICAgICAgICAgcmV0dXJuIGNhbGxiYWNrKCk7XHJcbiAgICAgICAgfTtcclxuICAgICAgfVxyXG4gICAgfSkoKTtcclxuXHJcbiAgICBXT1cucHJvdG90eXBlLnJlc2V0U3R5bGUgPSBmdW5jdGlvbigpIHtcclxuICAgICAgdmFyIGJveCwgaiwgbGVuLCByZWYsIHJlc3VsdHM7XHJcbiAgICAgIHJlZiA9IHRoaXMuYm94ZXM7XHJcbiAgICAgIHJlc3VsdHMgPSBbXTtcclxuICAgICAgZm9yIChqID0gMCwgbGVuID0gcmVmLmxlbmd0aDsgaiA8IGxlbjsgaisrKSB7XHJcbiAgICAgICAgYm94ID0gcmVmW2pdO1xyXG4gICAgICAgIHJlc3VsdHMucHVzaChib3guc3R5bGUudmlzaWJpbGl0eSA9ICd2aXNpYmxlJyk7XHJcbiAgICAgIH1cclxuICAgICAgcmV0dXJuIHJlc3VsdHM7XHJcbiAgICB9O1xyXG5cclxuICAgIFdPVy5wcm90b3R5cGUucmVzZXRBbmltYXRpb24gPSBmdW5jdGlvbihldmVudCkge1xyXG4gICAgICB2YXIgdGFyZ2V0O1xyXG4gICAgICBpZiAoZXZlbnQudHlwZS50b0xvd2VyQ2FzZSgpLmluZGV4T2YoJ2FuaW1hdGlvbmVuZCcpID49IDApIHtcclxuICAgICAgICB0YXJnZXQgPSBldmVudC50YXJnZXQgfHwgZXZlbnQuc3JjRWxlbWVudDtcclxuICAgICAgICByZXR1cm4gdGFyZ2V0LmNsYXNzTmFtZSA9IHRhcmdldC5jbGFzc05hbWUucmVwbGFjZSh0aGlzLmNvbmZpZy5hbmltYXRlQ2xhc3MsICcnKS50cmltKCk7XHJcbiAgICAgIH1cclxuICAgIH07XHJcblxyXG4gICAgV09XLnByb3RvdHlwZS5jdXN0b21TdHlsZSA9IGZ1bmN0aW9uKGJveCwgaGlkZGVuLCBkdXJhdGlvbiwgZGVsYXksIGl0ZXJhdGlvbikge1xyXG4gICAgICBpZiAoaGlkZGVuKSB7XHJcbiAgICAgICAgdGhpcy5jYWNoZUFuaW1hdGlvbk5hbWUoYm94KTtcclxuICAgICAgfVxyXG4gICAgICBib3guc3R5bGUudmlzaWJpbGl0eSA9IGhpZGRlbiA/ICdoaWRkZW4nIDogJ3Zpc2libGUnO1xyXG4gICAgICBpZiAoZHVyYXRpb24pIHtcclxuICAgICAgICB0aGlzLnZlbmRvclNldChib3guc3R5bGUsIHtcclxuICAgICAgICAgIGFuaW1hdGlvbkR1cmF0aW9uOiBkdXJhdGlvblxyXG4gICAgICAgIH0pO1xyXG4gICAgICB9XHJcbiAgICAgIGlmIChkZWxheSkge1xyXG4gICAgICAgIHRoaXMudmVuZG9yU2V0KGJveC5zdHlsZSwge1xyXG4gICAgICAgICAgYW5pbWF0aW9uRGVsYXk6IGRlbGF5XHJcbiAgICAgICAgfSk7XHJcbiAgICAgIH1cclxuICAgICAgaWYgKGl0ZXJhdGlvbikge1xyXG4gICAgICAgIHRoaXMudmVuZG9yU2V0KGJveC5zdHlsZSwge1xyXG4gICAgICAgICAgYW5pbWF0aW9uSXRlcmF0aW9uQ291bnQ6IGl0ZXJhdGlvblxyXG4gICAgICAgIH0pO1xyXG4gICAgICB9XHJcbiAgICAgIHRoaXMudmVuZG9yU2V0KGJveC5zdHlsZSwge1xyXG4gICAgICAgIGFuaW1hdGlvbk5hbWU6IGhpZGRlbiA/ICdub25lJyA6IHRoaXMuY2FjaGVkQW5pbWF0aW9uTmFtZShib3gpXHJcbiAgICAgIH0pO1xyXG4gICAgICByZXR1cm4gYm94O1xyXG4gICAgfTtcclxuXHJcbiAgICBXT1cucHJvdG90eXBlLnZlbmRvcnMgPSBbXCJtb3pcIiwgXCJ3ZWJraXRcIl07XHJcblxyXG4gICAgV09XLnByb3RvdHlwZS52ZW5kb3JTZXQgPSBmdW5jdGlvbihlbGVtLCBwcm9wZXJ0aWVzKSB7XHJcbiAgICAgIHZhciBuYW1lLCByZXN1bHRzLCB2YWx1ZSwgdmVuZG9yO1xyXG4gICAgICByZXN1bHRzID0gW107XHJcbiAgICAgIGZvciAobmFtZSBpbiBwcm9wZXJ0aWVzKSB7XHJcbiAgICAgICAgdmFsdWUgPSBwcm9wZXJ0aWVzW25hbWVdO1xyXG4gICAgICAgIGVsZW1bXCJcIiArIG5hbWVdID0gdmFsdWU7XHJcbiAgICAgICAgcmVzdWx0cy5wdXNoKChmdW5jdGlvbigpIHtcclxuICAgICAgICAgIHZhciBqLCBsZW4sIHJlZiwgcmVzdWx0czE7XHJcbiAgICAgICAgICByZWYgPSB0aGlzLnZlbmRvcnM7XHJcbiAgICAgICAgICByZXN1bHRzMSA9IFtdO1xyXG4gICAgICAgICAgZm9yIChqID0gMCwgbGVuID0gcmVmLmxlbmd0aDsgaiA8IGxlbjsgaisrKSB7XHJcbiAgICAgICAgICAgIHZlbmRvciA9IHJlZltqXTtcclxuICAgICAgICAgICAgcmVzdWx0czEucHVzaChlbGVtW1wiXCIgKyB2ZW5kb3IgKyAobmFtZS5jaGFyQXQoMCkudG9VcHBlckNhc2UoKSkgKyAobmFtZS5zdWJzdHIoMSkpXSA9IHZhbHVlKTtcclxuICAgICAgICAgIH1cclxuICAgICAgICAgIHJldHVybiByZXN1bHRzMTtcclxuICAgICAgICB9KS5jYWxsKHRoaXMpKTtcclxuICAgICAgfVxyXG4gICAgICByZXR1cm4gcmVzdWx0cztcclxuICAgIH07XHJcblxyXG4gICAgV09XLnByb3RvdHlwZS52ZW5kb3JDU1MgPSBmdW5jdGlvbihlbGVtLCBwcm9wZXJ0eSkge1xyXG4gICAgICB2YXIgaiwgbGVuLCByZWYsIHJlc3VsdCwgc3R5bGUsIHZlbmRvcjtcclxuICAgICAgc3R5bGUgPSBnZXRDb21wdXRlZFN0eWxlKGVsZW0pO1xyXG4gICAgICByZXN1bHQgPSBzdHlsZS5nZXRQcm9wZXJ0eUNTU1ZhbHVlKHByb3BlcnR5KTtcclxuICAgICAgcmVmID0gdGhpcy52ZW5kb3JzO1xyXG4gICAgICBmb3IgKGogPSAwLCBsZW4gPSByZWYubGVuZ3RoOyBqIDwgbGVuOyBqKyspIHtcclxuICAgICAgICB2ZW5kb3IgPSByZWZbal07XHJcbiAgICAgICAgcmVzdWx0ID0gcmVzdWx0IHx8IHN0eWxlLmdldFByb3BlcnR5Q1NTVmFsdWUoXCItXCIgKyB2ZW5kb3IgKyBcIi1cIiArIHByb3BlcnR5KTtcclxuICAgICAgfVxyXG4gICAgICByZXR1cm4gcmVzdWx0O1xyXG4gICAgfTtcclxuXHJcbiAgICBXT1cucHJvdG90eXBlLmFuaW1hdGlvbk5hbWUgPSBmdW5jdGlvbihib3gpIHtcclxuICAgICAgdmFyIGFuaW1hdGlvbk5hbWUsIGVycm9yO1xyXG4gICAgICB0cnkge1xyXG4gICAgICAgIGFuaW1hdGlvbk5hbWUgPSB0aGlzLnZlbmRvckNTUyhib3gsICdhbmltYXRpb24tbmFtZScpLmNzc1RleHQ7XHJcbiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgICAgYW5pbWF0aW9uTmFtZSA9IGdldENvbXB1dGVkU3R5bGUoYm94KS5nZXRQcm9wZXJ0eVZhbHVlKCdhbmltYXRpb24tbmFtZScpO1xyXG4gICAgICB9XHJcbiAgICAgIGlmIChhbmltYXRpb25OYW1lID09PSAnbm9uZScpIHtcclxuICAgICAgICByZXR1cm4gJyc7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgcmV0dXJuIGFuaW1hdGlvbk5hbWU7XHJcbiAgICAgIH1cclxuICAgIH07XHJcblxyXG4gICAgV09XLnByb3RvdHlwZS5jYWNoZUFuaW1hdGlvbk5hbWUgPSBmdW5jdGlvbihib3gpIHtcclxuICAgICAgcmV0dXJuIHRoaXMuYW5pbWF0aW9uTmFtZUNhY2hlLnNldChib3gsIHRoaXMuYW5pbWF0aW9uTmFtZShib3gpKTtcclxuICAgIH07XHJcblxyXG4gICAgV09XLnByb3RvdHlwZS5jYWNoZWRBbmltYXRpb25OYW1lID0gZnVuY3Rpb24oYm94KSB7XHJcbiAgICAgIHJldHVybiB0aGlzLmFuaW1hdGlvbk5hbWVDYWNoZS5nZXQoYm94KTtcclxuICAgIH07XHJcblxyXG4gICAgV09XLnByb3RvdHlwZS5zY3JvbGxIYW5kbGVyID0gZnVuY3Rpb24oKSB7XHJcbiAgICAgIHJldHVybiB0aGlzLnNjcm9sbGVkID0gdHJ1ZTtcclxuICAgIH07XHJcblxyXG4gICAgV09XLnByb3RvdHlwZS5zY3JvbGxDYWxsYmFjayA9IGZ1bmN0aW9uKCkge1xyXG4gICAgICB2YXIgYm94O1xyXG4gICAgICBpZiAodGhpcy5zY3JvbGxlZCkge1xyXG4gICAgICAgIHRoaXMuc2Nyb2xsZWQgPSBmYWxzZTtcclxuICAgICAgICB0aGlzLmJveGVzID0gKGZ1bmN0aW9uKCkge1xyXG4gICAgICAgICAgdmFyIGosIGxlbiwgcmVmLCByZXN1bHRzO1xyXG4gICAgICAgICAgcmVmID0gdGhpcy5ib3hlcztcclxuICAgICAgICAgIHJlc3VsdHMgPSBbXTtcclxuICAgICAgICAgIGZvciAoaiA9IDAsIGxlbiA9IHJlZi5sZW5ndGg7IGogPCBsZW47IGorKykge1xyXG4gICAgICAgICAgICBib3ggPSByZWZbal07XHJcbiAgICAgICAgICAgIGlmICghKGJveCkpIHtcclxuICAgICAgICAgICAgICBjb250aW51ZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBpZiAodGhpcy5pc1Zpc2libGUoYm94KSkge1xyXG4gICAgICAgICAgICAgIHRoaXMuc2hvdyhib3gpO1xyXG4gICAgICAgICAgICAgIGNvbnRpbnVlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHJlc3VsdHMucHVzaChib3gpO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgICAgcmV0dXJuIHJlc3VsdHM7XHJcbiAgICAgICAgfSkuY2FsbCh0aGlzKTtcclxuICAgICAgICBpZiAoISh0aGlzLmJveGVzLmxlbmd0aCB8fCB0aGlzLmNvbmZpZy5saXZlKSkge1xyXG4gICAgICAgICAgcmV0dXJuIHRoaXMuc3RvcCgpO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfTtcclxuXHJcbiAgICBXT1cucHJvdG90eXBlLm9mZnNldFRvcCA9IGZ1bmN0aW9uKGVsZW1lbnQpIHtcclxuICAgICAgdmFyIHRvcDtcclxuICAgICAgd2hpbGUgKGVsZW1lbnQub2Zmc2V0VG9wID09PSB2b2lkIDApIHtcclxuICAgICAgICBlbGVtZW50ID0gZWxlbWVudC5wYXJlbnROb2RlO1xyXG4gICAgICB9XHJcbiAgICAgIHRvcCA9IGVsZW1lbnQub2Zmc2V0VG9wO1xyXG4gICAgICB3aGlsZSAoZWxlbWVudCA9IGVsZW1lbnQub2Zmc2V0UGFyZW50KSB7XHJcbiAgICAgICAgdG9wICs9IGVsZW1lbnQub2Zmc2V0VG9wO1xyXG4gICAgICB9XHJcbiAgICAgIHJldHVybiB0b3A7XHJcbiAgICB9O1xyXG5cclxuICAgIFdPVy5wcm90b3R5cGUuaXNWaXNpYmxlID0gZnVuY3Rpb24oYm94KSB7XHJcbiAgICAgIHZhciBib3R0b20sIG9mZnNldCwgdG9wLCB2aWV3Qm90dG9tLCB2aWV3VG9wO1xyXG4gICAgICBvZmZzZXQgPSBib3guZ2V0QXR0cmlidXRlKCdkYXRhLXdvdy1vZmZzZXQnKSB8fCB0aGlzLmNvbmZpZy5vZmZzZXQ7XHJcbiAgICAgIHZpZXdUb3AgPSAodGhpcy5jb25maWcuc2Nyb2xsQ29udGFpbmVyICYmIHRoaXMuY29uZmlnLnNjcm9sbENvbnRhaW5lci5zY3JvbGxUb3ApIHx8IHdpbmRvdy5wYWdlWU9mZnNldDtcclxuICAgICAgdmlld0JvdHRvbSA9IHZpZXdUb3AgKyBNYXRoLm1pbih0aGlzLmVsZW1lbnQuY2xpZW50SGVpZ2h0LCB0aGlzLnV0aWwoKS5pbm5lckhlaWdodCgpKSAtIG9mZnNldDtcclxuICAgICAgdG9wID0gdGhpcy5vZmZzZXRUb3AoYm94KTtcclxuICAgICAgYm90dG9tID0gdG9wICsgYm94LmNsaWVudEhlaWdodDtcclxuICAgICAgcmV0dXJuIHRvcCA8PSB2aWV3Qm90dG9tICYmIGJvdHRvbSA+PSB2aWV3VG9wO1xyXG4gICAgfTtcclxuXHJcbiAgICBXT1cucHJvdG90eXBlLnV0aWwgPSBmdW5jdGlvbigpIHtcclxuICAgICAgcmV0dXJuIHRoaXMuX3V0aWwgIT0gbnVsbCA/IHRoaXMuX3V0aWwgOiB0aGlzLl91dGlsID0gbmV3IFV0aWwoKTtcclxuICAgIH07XHJcblxyXG4gICAgV09XLnByb3RvdHlwZS5kaXNhYmxlZCA9IGZ1bmN0aW9uKCkge1xyXG4gICAgICByZXR1cm4gIXRoaXMuY29uZmlnLm1vYmlsZSAmJiB0aGlzLnV0aWwoKS5pc01vYmlsZShuYXZpZ2F0b3IudXNlckFnZW50KTtcclxuICAgIH07XHJcblxyXG4gICAgcmV0dXJuIFdPVztcclxuXHJcbiAgfSkoKTtcclxuXHJcbn0pLmNhbGwodGhpcyk7XHJcbm5ldyBXT1coKS5pbml0KCk7XHJcblxyXG5cclxuKGZ1bmN0aW9uICgkKSB7XHJcblx0dmFyIHB1c2h5ID0gJCgnLnB1c2h5JyksIC8vbWVudSBjc3MgY2xhc3NcclxuXHRcdGJvZHkgPSAkKCdib2R5JyksXHJcblx0XHRjb250YWluZXIgPSAkKCcjY29udGFpbmVyJyksIC8vY29udGFpbmVyIGNzcyBjbGFzc1xyXG5cdFx0cHVzaCA9ICQoJy5wdXNoJyksIC8vY3NzIGNsYXNzIHRvIGFkZCBwdXNoeSBjYXBhYmlsaXR5XHJcblx0XHRwdXNoeUxlZnQgPSAncHVzaHktbGVmdCcsIC8vY3NzIGNsYXNzIGZvciBsZWZ0IG1lbnUgcG9zaXRpb25cclxuXHRcdHB1c2h5T3BlbkxlZnQgPSAncHVzaHktb3Blbi1sZWZ0JywgLy9jc3MgY2xhc3Mgd2hlbiBtZW51IGlzIG9wZW4gKGxlZnQgcG9zaXRpb24pXHJcblx0XHRwdXNoeU9wZW5SaWdodCA9ICdwdXNoeS1vcGVuLXJpZ2h0JywgLy9jc3MgY2xhc3Mgd2hlbiBtZW51IGlzIG9wZW4gKHJpZ2h0IHBvc2l0aW9uKVxyXG5cdFx0c2l0ZU92ZXJsYXkgPSAkKCcuc2l0ZS1vdmVybGF5JyksIC8vc2l0ZSBvdmVybGF5XHJcblx0XHRtZW51QnRuID0gJCgnLm1lbnUtYnRuLCAucHVzaHktbGluaycpLCAvL2NzcyBjbGFzc2VzIHRvIHRvZ2dsZSB0aGUgbWVudVxyXG5cdFx0bWVudVNwZWVkID0gMjAwLCAvL2pRdWVyeSBmYWxsYmFjayBtZW51IHNwZWVkXHJcblx0XHRtZW51V2lkdGggPSBwdXNoeS53aWR0aCgpICsgJ3B4JywgLy9qUXVlcnkgZmFsbGJhY2sgbWVudSB3aWR0aFxyXG5cdFx0c3VibWVudUNsYXNzID0gJy5wdXNoeS1zdWJtZW51JyxcclxuXHRcdHN1Ym1lbnVPcGVuQ2xhc3MgPSAncHVzaHktc3VibWVudS1vcGVuJyxcclxuXHRcdHN1Ym1lbnVDbG9zZWRDbGFzcyA9ICdwdXNoeS1zdWJtZW51LWNsb3NlZCcsXHJcblx0XHRzdWJtZW51ID0gJChzdWJtZW51Q2xhc3MpO1xyXG5cclxuXHRmdW5jdGlvbiB0b2dnbGVQdXNoeSgpe1xyXG5cdFx0Ly9hZGQgY2xhc3MgdG8gYm9keSBiYXNlZCBvbiBtZW51IHBvc2l0aW9uXHJcblx0XHRpZiggcHVzaHkuaGFzQ2xhc3MocHVzaHlMZWZ0KSApe1xyXG5cdFx0XHRib2R5LnRvZ2dsZUNsYXNzKHB1c2h5T3BlbkxlZnQpO1xyXG5cdFx0fWVsc2V7XHJcblx0XHRcdGJvZHkudG9nZ2xlQ2xhc3MocHVzaHlPcGVuUmlnaHQpO1xyXG5cdFx0fVxyXG5cdH1cclxuXHJcblx0ZnVuY3Rpb24gb3BlblB1c2h5RmFsbGJhY2soKXtcdFx0XHJcblxyXG5cdFx0Ly9hbmltYXRlIG1lbnUgcG9zaXRpb24gYmFzZWQgb24gQ1NTIGNsYXNzXHJcblx0XHRpZiggcHVzaHkuaGFzQ2xhc3MocHVzaHlMZWZ0KSApe1xyXG5cdFx0XHRib2R5LmFkZENsYXNzKHB1c2h5T3BlbkxlZnQpO1xyXG5cdFx0XHRwdXNoeS5hbmltYXRlKHtsZWZ0OiBcIjBweFwifSwgbWVudVNwZWVkKTtcclxuXHRcdFx0Y29udGFpbmVyLmFuaW1hdGUoe2xlZnQ6IG1lbnVXaWR0aH0sIG1lbnVTcGVlZCk7XHJcblx0XHRcdC8vY3NzIGNsYXNzIHRvIGFkZCBwdXNoeSBjYXBhYmlsaXR5XHJcblx0XHRcdHB1c2guYW5pbWF0ZSh7bGVmdDogbWVudVdpZHRofSwgbWVudVNwZWVkKTtcclxuXHRcdH1lbHNle1xyXG5cdFx0XHRib2R5LmFkZENsYXNzKHB1c2h5T3BlblJpZ2h0KTtcclxuXHRcdFx0cHVzaHkuYW5pbWF0ZSh7cmlnaHQ6ICcwcHgnfSwgbWVudVNwZWVkKTtcclxuXHRcdFx0Y29udGFpbmVyLmFuaW1hdGUoe3JpZ2h0OiBtZW51V2lkdGh9LCBtZW51U3BlZWQpO1xyXG5cdFx0XHRwdXNoLmFuaW1hdGUoe3JpZ2h0OiBtZW51V2lkdGh9LCBtZW51U3BlZWQpO1xyXG5cdFx0fVxyXG5cclxuXHR9XHJcblxyXG5cdGZ1bmN0aW9uIGNsb3NlUHVzaHlGYWxsYmFjaygpe1xyXG5cclxuXHRcdC8vYW5pbWF0ZSBtZW51IHBvc2l0aW9uIGJhc2VkIG9uIENTUyBjbGFzc1xyXG5cdFx0aWYoIHB1c2h5Lmhhc0NsYXNzKHB1c2h5TGVmdCkgKXtcclxuXHRcdFx0Ym9keS5yZW1vdmVDbGFzcyhwdXNoeU9wZW5MZWZ0KTtcclxuXHRcdFx0cHVzaHkuYW5pbWF0ZSh7bGVmdDogXCItXCIgKyBtZW51V2lkdGh9LCBtZW51U3BlZWQpO1xyXG5cdFx0XHRjb250YWluZXIuYW5pbWF0ZSh7bGVmdDogXCIwcHhcIn0sIG1lbnVTcGVlZCk7XHJcblx0XHRcdC8vY3NzIGNsYXNzIHRvIGFkZCBwdXNoeSBjYXBhYmlsaXR5XHJcblx0XHRcdHB1c2guYW5pbWF0ZSh7bGVmdDogXCIwcHhcIn0sIG1lbnVTcGVlZCk7XHJcblx0XHR9ZWxzZXtcclxuXHRcdFx0Ym9keS5yZW1vdmVDbGFzcyhwdXNoeU9wZW5SaWdodCk7XHJcblx0XHRcdHB1c2h5LmFuaW1hdGUoe3JpZ2h0OiBcIi1cIiArIG1lbnVXaWR0aH0sIG1lbnVTcGVlZCk7XHJcblx0XHRcdGNvbnRhaW5lci5hbmltYXRlKHtyaWdodDogXCIwcHhcIn0sIG1lbnVTcGVlZCk7XHJcblx0XHRcdHB1c2guYW5pbWF0ZSh7cmlnaHQ6IFwiMHB4XCJ9LCBtZW51U3BlZWQpO1xyXG5cdFx0fVxyXG5cclxuXHR9XHJcblxyXG5cdGZ1bmN0aW9uIHRvZ2dsZVN1Ym1lbnUoKXtcclxuXHRcdC8vaGlkZSBzdWJtZW51IGJ5IGRlZmF1bHRcclxuXHRcdCQoc3VibWVudUNsYXNzKS5hZGRDbGFzcyhzdWJtZW51Q2xvc2VkQ2xhc3MpO1xyXG5cclxuXHRcdCQoc3VibWVudUNsYXNzKS5vbignY2xpY2snLCBmdW5jdGlvbigpe1xyXG5cdCAgICAgICAgdmFyIHNlbGVjdGVkID0gJCh0aGlzKTtcclxuXHJcblx0ICAgICAgICBpZiggc2VsZWN0ZWQuaGFzQ2xhc3Moc3VibWVudUNsb3NlZENsYXNzKSApIHtcclxuXHQgICAgICAgICAgICAvL2hpZGUgb3BlbmVkIHN1Ym1lbnVzXHJcblx0ICAgICAgICAgICAgJChzdWJtZW51Q2xhc3MpLmFkZENsYXNzKHN1Ym1lbnVDbG9zZWRDbGFzcykucmVtb3ZlQ2xhc3Moc3VibWVudU9wZW5DbGFzcyk7XHJcblx0ICAgICAgICAgICAgLy9zaG93IHN1Ym1lbnVcclxuXHQgICAgICAgICAgICBzZWxlY3RlZC5yZW1vdmVDbGFzcyhzdWJtZW51Q2xvc2VkQ2xhc3MpLmFkZENsYXNzKHN1Ym1lbnVPcGVuQ2xhc3MpO1xyXG5cdCAgICAgICAgfWVsc2V7XHJcblx0ICAgICAgICAgICAgLy9oaWRlIHN1Ym1lbnVcclxuXHQgICAgICAgICAgICBzZWxlY3RlZC5hZGRDbGFzcyhzdWJtZW51Q2xvc2VkQ2xhc3MpLnJlbW92ZUNsYXNzKHN1Ym1lbnVPcGVuQ2xhc3MpO1xyXG5cdCAgICAgICAgfVxyXG5cdCAgICB9KTtcclxuXHR9XHJcblx0XHJcbiAgICBmdW5jdGlvbiB0b2dnbGVTdWJtZW51RmFsbGJhY2soKXtcclxuICAgIFx0Ly9oaWRlIHN1Ym1lbnUgYnkgZGVmYXVsdFxyXG4gICAgXHQkKHN1Ym1lbnVDbGFzcykuYWRkQ2xhc3Moc3VibWVudUNsb3NlZENsYXNzKTtcclxuICAgIFx0XHJcbiAgICBcdHN1Ym1lbnUuY2hpbGRyZW4oJ2EnKS5vbignY2xpY2snLCBmdW5jdGlvbihldmVudCl7XHJcbiAgICBcdFx0ZXZlbnQucHJldmVudERlZmF1bHQoKTtcclxuICAgIFx0XHQkKHRoaXMpLnRvZ2dsZUNsYXNzKHN1Ym1lbnVPcGVuQ2xhc3MpXHJcbiAgICBcdFx0XHQgICAubmV4dCgnLnB1c2h5LXN1Ym1lbnUgdWwnKS5zbGlkZVRvZ2dsZSgyMDApXHJcbiAgICBcdFx0XHQgICAuZW5kKCkucGFyZW50KHN1Ym1lbnVDbGFzcylcclxuICAgIFx0XHRcdCAgIC5zaWJsaW5ncyhzdWJtZW51Q2xhc3MpLmNoaWxkcmVuKCdhJylcclxuICAgIFx0XHRcdCAgIC5yZW1vdmVDbGFzcyhzdWJtZW51T3BlbkNsYXNzKVxyXG4gICAgXHRcdFx0ICAgLm5leHQoJy5wdXNoeS1zdWJtZW51IHVsJykuc2xpZGVVcCgyMDApO1xyXG4gICAgXHR9KTtcclxuICAgIH1cclxuXHJcblx0Ly9jaGVja3MgaWYgM2QgdHJhbnNmb3JtcyBhcmUgc3VwcG9ydGVkIHJlbW92aW5nIHRoZSBtb2Rlcm5penIgZGVwZW5kZW5jeVxyXG5cdHZhciBjc3NUcmFuc2Zvcm1zM2QgPSAoZnVuY3Rpb24gY3NzdHJhbnNmb3JtczNkKCl7XHJcblx0XHR2YXIgZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdwJyksXHJcblx0XHRzdXBwb3J0ZWQgPSBmYWxzZSxcclxuXHRcdHRyYW5zZm9ybXMgPSB7XHJcblx0XHQgICAgJ3dlYmtpdFRyYW5zZm9ybSc6Jy13ZWJraXQtdHJhbnNmb3JtJyxcclxuXHRcdCAgICAnT1RyYW5zZm9ybSc6Jy1vLXRyYW5zZm9ybScsXHJcblx0XHQgICAgJ21zVHJhbnNmb3JtJzonLW1zLXRyYW5zZm9ybScsXHJcblx0XHQgICAgJ01velRyYW5zZm9ybSc6Jy1tb3otdHJhbnNmb3JtJyxcclxuXHRcdCAgICAndHJhbnNmb3JtJzondHJhbnNmb3JtJ1xyXG5cdFx0fTtcclxuXHJcblx0XHQvLyBBZGQgaXQgdG8gdGhlIGJvZHkgdG8gZ2V0IHRoZSBjb21wdXRlZCBzdHlsZVxyXG5cdFx0ZG9jdW1lbnQuYm9keS5pbnNlcnRCZWZvcmUoZWwsIG51bGwpO1xyXG5cclxuXHRcdGZvcih2YXIgdCBpbiB0cmFuc2Zvcm1zKXtcclxuXHRcdCAgICBpZiggZWwuc3R5bGVbdF0gIT09IHVuZGVmaW5lZCApe1xyXG5cdFx0ICAgICAgICBlbC5zdHlsZVt0XSA9ICd0cmFuc2xhdGUzZCgxcHgsMXB4LDFweCknO1xyXG5cdFx0ICAgICAgICBzdXBwb3J0ZWQgPSB3aW5kb3cuZ2V0Q29tcHV0ZWRTdHlsZShlbCkuZ2V0UHJvcGVydHlWYWx1ZSh0cmFuc2Zvcm1zW3RdKTtcclxuXHRcdCAgICB9XHJcblx0XHR9XHJcblxyXG5cdFx0ZG9jdW1lbnQuYm9keS5yZW1vdmVDaGlsZChlbCk7XHJcblxyXG5cdFx0cmV0dXJuIChzdXBwb3J0ZWQgIT09IHVuZGVmaW5lZCAmJiBzdXBwb3J0ZWQubGVuZ3RoID4gMCAmJiBzdXBwb3J0ZWQgIT09IFwibm9uZVwiKTtcclxuXHR9KSgpO1xyXG5cclxuXHRpZihjc3NUcmFuc2Zvcm1zM2Qpe1xyXG5cdFx0Ly9tYWtlIG1lbnUgdmlzaWJsZVxyXG5cdFx0cHVzaHkuY3NzKHsndmlzaWJpbGl0eSc6ICd2aXNpYmxlJ30pO1xyXG5cclxuXHRcdC8vdG9nZ2xlIHN1Ym1lbnVcclxuXHRcdHRvZ2dsZVN1Ym1lbnUoKTtcclxuXHJcblx0XHQvL3RvZ2dsZSBtZW51XHJcblx0XHRtZW51QnRuLm9uKCdjbGljaycsIGZ1bmN0aW9uKCl7XHJcblx0XHRcdHRvZ2dsZVB1c2h5KCk7XHJcblx0XHR9KTtcclxuXHRcdC8vY2xvc2UgbWVudSB3aGVuIGNsaWNraW5nIHNpdGUgb3ZlcmxheVxyXG5cdFx0c2l0ZU92ZXJsYXkub24oJ2NsaWNrJywgZnVuY3Rpb24oKXtcclxuXHRcdFx0dG9nZ2xlUHVzaHkoKTtcclxuXHRcdH0pO1xyXG5cdH1lbHNle1xyXG5cdFx0Ly9hZGQgY3NzIGNsYXNzIHRvIGJvZHlcclxuXHRcdGJvZHkuYWRkQ2xhc3MoJ25vLWNzc3RyYW5zZm9ybXMzZCcpO1xyXG5cclxuXHRcdC8vaGlkZSBtZW51IGJ5IGRlZmF1bHRcclxuXHRcdGlmKCBwdXNoeS5oYXNDbGFzcyhwdXNoeUxlZnQpICl7XHJcblx0XHRcdHB1c2h5LmNzcyh7bGVmdDogXCItXCIgKyBtZW51V2lkdGh9KTtcclxuXHRcdH1lbHNle1xyXG5cdFx0XHRwdXNoeS5jc3Moe3JpZ2h0OiBcIi1cIiArIG1lbnVXaWR0aH0pO1xyXG5cdFx0fVxyXG5cclxuXHRcdC8vbWFrZSBtZW51IHZpc2libGVcclxuXHRcdHB1c2h5LmNzcyh7J3Zpc2liaWxpdHknOiAndmlzaWJsZSd9KTsgXHJcblx0XHQvL2ZpeGVzIElFIHNjcm9sbGJhciBpc3N1ZVxyXG5cdFx0Y29udGFpbmVyLmNzcyh7XCJvdmVyZmxvdy14XCI6IFwiaGlkZGVuXCJ9KTtcclxuXHJcblx0XHQvL2tlZXAgdHJhY2sgb2YgbWVudSBzdGF0ZSAob3Blbi9jbG9zZSlcclxuXHRcdHZhciBvcGVuZWQgPSBmYWxzZTtcclxuXHJcblx0XHQvL3RvZ2dsZSBzdWJtZW51XHJcblx0XHR0b2dnbGVTdWJtZW51RmFsbGJhY2soKTtcclxuXHJcblx0XHQvL3RvZ2dsZSBtZW51XHJcblx0XHRtZW51QnRuLm9uKCdjbGljaycsIGZ1bmN0aW9uKCl7XHJcblx0XHRcdGlmIChvcGVuZWQpIHtcclxuXHRcdFx0XHRjbG9zZVB1c2h5RmFsbGJhY2soKTtcclxuXHRcdFx0XHRvcGVuZWQgPSBmYWxzZTtcclxuXHRcdFx0fSBlbHNlIHtcclxuXHRcdFx0XHRvcGVuUHVzaHlGYWxsYmFjaygpO1xyXG5cdFx0XHRcdG9wZW5lZCA9IHRydWU7XHJcblx0XHRcdH1cclxuXHRcdH0pO1xyXG5cclxuXHRcdC8vY2xvc2UgbWVudSB3aGVuIGNsaWNraW5nIHNpdGUgb3ZlcmxheVxyXG5cdFx0c2l0ZU92ZXJsYXkub24oJ2NsaWNrJywgZnVuY3Rpb24oKXtcclxuXHRcdFx0aWYgKG9wZW5lZCkge1xyXG5cdFx0XHRcdGNsb3NlUHVzaHlGYWxsYmFjaygpO1xyXG5cdFx0XHRcdG9wZW5lZCA9IGZhbHNlO1xyXG5cdFx0XHR9IGVsc2Uge1xyXG5cdFx0XHRcdG9wZW5QdXNoeUZhbGxiYWNrKCk7XHJcblx0XHRcdFx0b3BlbmVkID0gdHJ1ZTtcclxuXHRcdFx0fVxyXG5cdFx0fSk7XHJcblx0fVxyXG59KGpRdWVyeSkpOyJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==
